(nalloc! top 124)
(alloc! _ 0)

;; Here, puts can recurse only to write 124 a's
;; because locals are kept in the zero-page, and there's only 128-ish of them
;;
;; 0x0 0x1 0x2 0x3 0x4 0x5 0x6 ... 0x100
;; \_/ \_____/ \_____/ \_____/     \_____
;; ptr  local1  local2  local3     rom code
;;
;; When a function is called, all arguments are moved from the stack to the "local stack"
;; It takes some prologue and epilogue code to do so, that's why most of the builtin funtions
;; are just macros (we don't want to call like 20 opcodes just to call deo! or something)

(define (puts ptr)
  (if (equ? (get8! ptr) 0)
      #t
      (begin
        (putchar (get8! ptr))
        (puts (+ ptr 1)))))

;; If we look at the decompiled code, we see that there's a lot of noise because of the locals
;; i'll need to figure out a faster & smarter way to use args inside a function.
;; This was just the easiest

;; ( defun normal puts (ptr) )
;; ( label: puts )
;; ( allocate-local! ptr )
;; |0230   80 00       ( )
;; |0232   10          ( LDZ )
;; |0233   01          ( INC )
;; |0234   80 02       ( )
;; |0236   1a          ( MUL )
;; |0237   31          ( STZ2 )
;; |0238   80 00       ( )
;; |023a   10          ( LDZ )
;; |023b   01          ( INC )
;; |023c   80 00       ( )
;; |023e   11          ( STZ )
;; ( if (equ? (get8! ptr) 0) )
;; ( _push! 0 )
;; |023f   80 00       ( )
;; |0241   80 00       ( )
;; ( _push! ptr )
;; |0243   80 00       ( )
;; |0245   10          ( LDZ )
;; |0246   80 00       ( )
;; |0248   19          ( SUB )
;; |0249   80 02       ( )
;; |024b   1a          ( MUL )
;; |024c   30          ( LDZ2 )
;; ( funcall! get8! )
;; |024d   80 01       ( )
;; |024f   80 4e       ( )
;; |0251   2e          ( JSR2 )
;; ( funcall! equ? )
;; |0252   80 01       ( )
;; |0254   80 11       ( )
;; |0256   2e          ( JSR2 )
;; ( _push! @@gensym__2 )
;; |0257   80 02       ( )
;; |0259   80 9a       ( )
;; |025b   2d          ( JCN2 )
;; ( _push! ptr )
;; |025c   80 00       ( )
;; |025e   10          ( LDZ )
;; |025f   80 00       ( )
;; |0261   19          ( SUB )
;; |0262   80 02       ( )
;; |0264   1a          ( MUL )
;; |0265   30          ( LDZ2 )
;; ( funcall! get8! )
;; |0266   80 01       ( )
;; |0268   80 4e       ( )
;; |026a   2e          ( JSR2 )
;; |026b   03          ( NIP )
;; ( _push! 24 )
;; |026c   80 00       ( )
;; |026e   80 18       ( )
;; |0270   03          ( NIP )
;; |0271   17          ( DEO )
;; ( funcall! nigeb )
;; |0272   80 01       ( )
;; |0274   80 10       ( )
;; |0276   2e          ( JSR2 )
;; ( _push! ptr )
;; |0277   80 00       ( )
;; |0279   10          ( LDZ )
;; |027a   80 00       ( )
;; |027c   19          ( SUB )
;; |027d   80 02       ( )
;; |027f   1a          ( MUL )
;; |0280   30          ( LDZ2 )
;; ( _push! 1 )
;; |0281   80 00       ( )
;; |0283   80 01       ( )
;; |0285   38          ( ADD2 )
;; ( funcall! nigeb )
;; |0286   80 01       ( )
;; |0288   80 10       ( )
;; |028a   2e          ( JSR2 )
;; ( funcall! puts )
;; |028b   80 02       ( )
;; |028d   80 30       ( )
;; |028f   2e          ( JSR2 )
;; ( funcall! nigeb )
;; |0290   80 01       ( )
;; |0292   80 10       ( )
;; |0294   2e          ( JSR2 )
;; ( _push! @@gensym__1 )
;; |0295   80 02       ( )
;; |0297   80 9e       ( )
;; |0299   2c          ( JMP2 )
;; ( label: @@gensym__2 )
;; ( _push! #true )
;; |029a   80 00       ( )
;; |029c   80 01       ( )
;; ( label: @@gensym__1 )
;; ( free-locals! 1 )
;; |029e   80 00       ( )
;; |02a0   10          ( LDZ )
;; |02a1   80 01       ( )
;; |02a3   19          ( SUB )
;; |02a4   80 00       ( )
;; |02a6   11          ( STZ )
;; |02a7   6c          ( JMP2r )

(define (main)
  (loopn (i 0 124 1)
    (set8! (+ top i) 97))
  (puts top)
  (exit 128))
